function [pairwiseComparisons, coefDiff, coefDiffCI] = mixedEffectsPairwiseComparisons(model, varName, alpha)
% This function takes a mixed generalized linear model, generated by
% fitglme, and calculates pairwise comparisons for the specified variable
% using the coefficients and their covariance matrix.
%
% Usage: [pairwiseComparisons, coefDiff, coefDiffCI] = mixedEffectsPairwiseComparisons(model, varName, alpha)
%
% Input:
% - model: a mixed generalized linear model
% - varName: the name of the variable for which to calculate pairwise comparisons
% - alpha: significance level for the confidence intervals (e.g., 0.05 for a 95% confidence interval)
%
% Output:
% - pairwiseComparisons: a matrix containing the pairwise comparison indices (i.e., row and column indices)
% - coefDiff: a vector containing the differences in coefficients for each pairwise comparison
% - coefDiffCI: a matrix containing the confidence intervals for the differences in coefficients

    % Get fixed effects coefficients and covariance matrix
    fixedEffects = fixedEffects(model);
    coefCov = coefcov(model);

    % Get the indices of coefficients related to the variable of interest
    coefNames = fixedEffects.Properties.RowNames;
    idx = find(startsWith(coefNames, [varName, '_']));
    nLevels = numel(idx);

    % Calculate pairwise comparisons and their confidence intervals
    pairwiseComparisons = [];
    coefDiff = [];
    coefDiffCI = [];

    for i = 1:(nLevels - 1)
        for j = (i + 1):nLevels
            pairwiseComparisons = [pairwiseComparisons; idx(i), idx(j)]; %#ok<AGROW> 

            % Calculate the difference in coefficients and its confidence interval
            diffCoef = fixedEffects.Estimate(idx(i)) - fixedEffects.Estimate(idx(j));
            diffCoefVar = coefCov(idx(i), idx(i)) + coefCov(idx(j), idx(j)) - 2 * coefCov(idx(i), idx(j));
            diffCoefSE = sqrt(diffCoefVar);
            critVal = tinv(1 - alpha / 2, model.DFE);
            diffCoefCI = [diffCoef - critVal * diffCoefSE, diffCoef + critVal * diffCoefSE];

            coefDiff = [coefDiff; diffCoef]; %#ok<AGROW> 
            coefDiffCI = [coefDiffCI; diffCoefCI]; %#ok<AGROW> 
        end
    end
end
