function mbq = getMiniBatchQueue( self, batchSize, XLabels, XNLabels, args )
    % Create a minibatch queue
    arguments
        self                ModelDataset
        batchSize           double ...
            {mustBeInteger, mustBePositive}
        XLabels             char
        XNLabels            char
        args.lengthOrder    logical = false
        args.partialBatch   char ...
            {mustBeMember( args.partialBatch, ...
            {'return', 'discard'} )} = 'discard'
    end

    % create a super datastore combining individual variable datastores
    ds = createDatastore( self.XInput, self.XTarget, self.PInput, ...
                          self.Y, args.lengthOrder );

    % setup the minibatch preprocessing function
    preproc = @( X, XN, P, Y, I ) preprocMiniBatch( X, XN, P, Y, I, ...
                                                    self.Padding.Value, ...
                                                    self.Padding.Location );
    % create the minibatch queue for training
    mbq = minibatchqueue(  ds, 4, ...
                      MiniBatchSize = batchSize, ...
                      PartialMiniBatch = args.partialBatch, ...
                      MiniBatchFcn = preproc, ...
                      MiniBatchFormat = {XLabels, XNLabels, 'CB', 'CB'} );

end